{"version":3,"sources":["Component/home.js","Component/graph.js","Component/control.js","Component/profile.js","Component/navigation.js","App.js","serviceWorker.js","index.js","01_frontend_config.js"],"names":["Home","componentDidMount","interval","setTimeout","getData","axios","get","then","a","res","fromGetData","data","datas","map","setState","console","log","addData","rand","Math","random","post","deleteData","index","state","Id","id","listId","delete","params","catch","err","editData","multipage","previous","next","preButton","pages","begin","nextButton","stop","bind","this","className","slice","showData","key","date","onClick","jsx","React","Component","App","props","add","json","temp","series","length","shift","concat","soc","endpoint","socketIOClient","on","config","SOCKET_URL","options","chart","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","xaxis","categories","name","type","width","Control","sendswitch","sw1","command","NameForm","value","handleChange","handleSubmit","event","target","alert","preventDefault","onSubmit","onChange","BackgroungNav","styled","div","NavBtn","span","Navigation","to","path","exact","component","home","graph","control","profile","Div","Example","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","require","REACT_APP_SOCKET_URL","process","module","exports"],"mappings":"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","file":"static/js/main.f32d090d.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class Home extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: [],\r\n      pages: {\r\n        begin: 0,\r\n        stop: 20\r\n      }\r\n    }\r\n    this.addData = this.addData.bind(this)\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.interval = setTimeout(this.getData(), 10000)\r\n  }\r\n\r\n  getData = () => {\r\n    axios.get('/api/getData')\r\n      .then(async (res) => {\r\n        let fromGetData = res.data\r\n        let datas = fromGetData.map((data) => { return data })\r\n        this.setState({ data: datas })\r\n        await console.log(datas)\r\n      })\r\n  }\r\n\r\n  addData = async () => {\r\n    let rand = Math.random()\r\n    await axios.post(\"/api/addData\", { data: rand })\r\n  }\r\n\r\n  deleteData = async (index) => {\r\n    let listId = await this.state.data.map((Id) => { return Id.id })\r\n    await console.log(listId)\r\n    await console.log(index)\r\n    axios.delete(\"/api/deleteData\", { data: { params: listId[index] } })\r\n      .catch((err) => {\r\n        console.log(\"Not Found Index : \" + err)\r\n      })\r\n    console.log(\"Your sent delete data index : \" + index)\r\n  }\r\n\r\n  editData = () => {\r\n    return <h1>Hello</h1>\r\n  }\r\n\r\n  multipage = async (previous, next) => {\r\n    let preButton = this.state.pages.begin\r\n    let nextButton = this.state.pages.stop\r\n\r\n    if (await previous && this.state.pages.begin !== 0) {\r\n      preButton = preButton - 10\r\n      nextButton = nextButton - 10\r\n      this.setState({ pages: { begin: preButton, stop: nextButton } })\r\n      preButton = 0\r\n      nextButton = 0\r\n    }\r\n    if (await next) {\r\n      preButton = preButton + 10\r\n      nextButton = nextButton + 10\r\n      this.setState({ pages: { begin: preButton, stop: nextButton } })\r\n      preButton = 0\r\n      nextButton = 0\r\n    }\r\n    // console.log(await `previous: ${this.state.pages.begin} , next: ${this.state.pages.stop}`)\r\n  }\r\n\r\n  render() {\r\n    let { data, pages } = this.state\r\n    return (\r\n      <div className='main-container'>\r\n        <div>\r\n          <table>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>อุณหภูมิ</th>\r\n              <th>ความชื้น</th>\r\n              <th>เวลา/วันที่</th>\r\n              <th>คำสั่ง</th>\r\n            </tr>\r\n            {data.slice(pages.begin, pages.stop).map((showData, index) =>\r\n              <tr>\r\n                <td><li key={index}> {showData.id} </li></td>\r\n                <td>\"\"</td>\r\n                <td> {showData.data} </td>\r\n                <td>{showData.date}</td>\r\n                <td><button onClick={() => { this.deleteData(index) }}> Delete </button>\r\n                  <button onClick={() => { this.editData(index) }}> Edit </button></td>\r\n              </tr>\r\n            )}\r\n          </table>\r\n\r\n          <button onClick={() => { this.multipage(1, 0) }}>Previous</button>\r\n          <button onClick={() => { this.multipage(0, 1) }}>Next</button>\r\n        </div>\r\n\r\n        <h3>Add Data</h3>\r\n\r\n        <button onClick={() => { this.addData() }} >Add</button>\r\n\r\n        <style jsx=\"true\">\r\n          {`\r\n            body {\r\n              background-color:pink;              \r\n            }\r\n            table, th, td {\r\n              border: 1px solid black;\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport socketIOClient from \"socket.io-client\"\r\nimport config from \"../01_frontend_config\"\r\n/*\r\nfunction getRandomInt(max) {\r\n\treturn Math.floor(Math.random() * Math.floor(max));\r\n}\r\n*/\r\nexport default class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tendpoint: config.SOCKET_URL,\r\n\t\t\toptions: {\r\n\t\t\t\tchart: {\r\n\t\t\t\t\tid: \"line\",\r\n\t\t\t\t\tanimations: {\r\n\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\teasing: 'linear',\r\n\t\t\t\t\t\tspeed: 50,\r\n\t\t\t\t\t\tanimateGradually: {\r\n\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\tdelay: 100\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdynamicAnimation: {\r\n\t\t\t\t\t\t\tenabled: false,\r\n\t\t\t\t\t\t\tspeed: 500\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\tcategories: []\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"temp\",\r\n\t\t\t\t\tdata: []\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\tadd = (json) => {\r\n\t\tlet temp = this.state.series[0].data\r\n\t\tif (temp.length > 9) {\r\n\t\t\ttemp.shift()\r\n\t\t}\r\n\t\tlet concat = temp.concat(json)\r\n\t\tthis.setState({ series: [{ data: concat }] })\r\n\t\tconsole.log(json)\r\n\t}\r\n\r\n\tsoc = () => {\r\n\t\tconst { endpoint } = this.state\r\n\t\tconst socket = socketIOClient(endpoint)\r\n\t\tsocket.on(\"nb\", (json) => {\r\n\t\t\tthis.add(json)\r\n\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\t//this.interval = setInterval(()=>{this.soc()},1000)\r\n\t\tthis.soc()\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Chart\r\n\t\t\t\t\toptions={this.state.options}\r\n\t\t\t\t\tseries={this.state.series}\r\n\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\twidth=\"500\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//css with styled component\r\nexport default class Control extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            sw1: false,\r\n        }\r\n        this.sendswitch = this.sendswitch.bind(this)\r\n    }\r\n\r\n    sendswitch = () => {\r\n        const { sw1 } = this.state\r\n        this.setState({sw1:!sw1})\r\n        axios.post('/api/button/', {\r\n            command: sw1\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <button onClick={() => { this.sendswitch() }}>switchbt</button>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nexport default class NameForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: '' };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('A name was submitted: ' + this.state.value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name:\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport home from './home'\r\nimport graph from './graph'\r\nimport control from './control'\r\nimport profile from './profile'\r\n\r\nvar BackgroungNav = styled.div`\r\n  padding: 10px 10px 10px 10px;\r\n  background-color: black;\r\n`\r\n\r\nconst NavBtn = styled.span`\r\n  \r\n  color: white;\r\n  padding: 10px 20px 10px 20px;\r\n  margin: 20px;\r\n  text-decoration: none;\r\n  display: inline;\r\n  list-style-type: none;\r\n  &:hover {\r\n    background-color: green;\r\n    text-decoration: none;\r\n  }\r\n  &:active {\r\n    background-color: red;\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport default class Navigation extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <BackgroungNav>\r\n            <NavBtn><Link to=\"/\">HOME</Link></NavBtn>\r\n            <NavBtn><Link to=\"/graph\">GRAPH</Link></NavBtn>\r\n            <NavBtn><Link to=\"/control\">CONTROL</Link></NavBtn>\r\n            <NavBtn><Link to=\"/profile\">PROFILE</Link></NavBtn>\r\n          </BackgroungNav>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={home} />\r\n            <Route path=\"/graph/\" component={graph} />\r\n            <Route path=\"/control/\" component={control} />\r\n            <Route path=\"/profile/\" component={profile} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport Navigation from './Component/navigation'\r\nimport styled from 'styled-components'\r\n\r\nconst Div = styled.span`\r\n  text-align: center;\r\n`\r\nexport default class Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <Div>\r\n        <Navigation />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","require('dotenv').config()\r\n\r\nconst REACT_APP_SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5001/'\r\n\r\nmodule.exports = {\r\n    SOCKET_URL: REACT_APP_SOCKET_URL\r\n}"],"sourceRoot":""}